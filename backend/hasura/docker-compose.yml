version: "3.6"
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgrespassword
    restart: always
  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE} # set to "false" to disable console

      HASURA_GRAPHQL_DEV_MODE: "true"
      # HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

      # HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    depends_on:
      - postgres
      # - data-connector-agent
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
  # data-connector-agent:
  #   image: hasura/graphql-data-connector:v2.38.0
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
  #     ## https://quarkus.io/guides/opentelemetry#configuration-reference
  #     QUARKUS_OPENTELEMETRY_ENABLED: "false"
  #     ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
  #     interval: 5s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 5s
volumes:
  db_data:
